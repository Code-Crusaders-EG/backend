// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("USERS_POSTGRES_URL")
}

model User {
  id        String @id @unique @default(cuid())
  email     String @unique
  username  String @unique
  firstName String
  lastName  String
}

// model Room {
//   id             String     @id @unique @default(cuid())
//   name           String
//   description    String?
//   type           RoomType?  @default(PUBLIC)
//   createdAt      DateTime?  @default(now())
//   updatedAt      DateTime?  @updatedAt
//   owner          User       @relation(fields: [ownerId], references: [id])
//   ownerId        String
//   participants   User[]     @relation("ParticipantRoom", fields: [participantsId], references: [id])
//   participantsId String[]
//   moderators     User[]     @relation("ModeratorRoom", fields: [moderatorsId], references: [id])
//   moderatorsId   String[]
//   contributors   User[]     @relation("ContributorRoom", fields: [contributorsId], references: [id])
//   contributorsId String[]
//   llm            LLM[]      @relation(fields: [llmId], references: [id])
//   llmId          String?
//   chatlog        Message[]
//   resources      Resource[]
// }
//
// model LLM {
//   id          String     @id @unique @default(cuid())
//   llmName     String     @unique
//   description String?
//   resources   Resource[] @relation(fields: [resourcesId], references: [id])
//   resourcesId String[]
//   responses   Message[]
//   user        User?      @relation(fields: [userId], references: [id])
//   userId      String?
//   room        Room?      @relation(fields: [roomId], references: [id])
//   roomId      String?
// }
//
// model Resource {
//   id        String         @id @unique @default(cuid())
//   type      ResourceType
//   format    ResourceFormat
//   content   Json
//   createdAt DateTime?      @default(now())
//   updatedAt DateTime?      @updatedAt
//   room      Room?          @relation(fields: [roomId], references: [id])
//   roomId    String?
//   llm       LLM?           @relation(fields: [llmId], references: [id])
//   llmId     String?
// }
//
// model Message {
//   id        String    @id @unique @default(cuid())
//   content   String
//   createdAt DateTime? @default(now())
//   user      User?     @relation(fields: [userId], references: [id])
//   userId    String?
//   room      Room?     @relation(fields: [roomId], references: [id])
//   roomId    String?
//   llm       LLM?      @relation(fields: [llmId], references: [id])
//   llmId     String?
// }
//
// enum UserRoleType {
//   ADMIN
//   USER
// }
//
// enum ResourceType {
//   BOOK
//   ARTICLE
//   DOCUMENT
//   VIDEO
//   OTHER
// }
//
// enum ResourceFormat {
//   PDF
//   DOCX
//   STRING
//   URL
// }
//
// enum RoomType {
//   PUBLIC
//   PRIVATE
// }
//
// enum UserRoomRoleType {
//   OWNER
//   CONTRIBUTOR
//   MODERATOR
//   PARTICIPATE
// }
