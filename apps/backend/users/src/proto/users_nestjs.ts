// @generated by protoc-gen-nestjs v0.2.0 with parameter "target=ts"
// @generated from file apps/backend/users/src/proto/users.proto (package users, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { UserEntity, userId } from "./users_pb.js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";

/**
 * @generated from service users.UsersService
 */
export interface UsersServiceController {
  /**
   * @generated from rpc users.UsersService.findOne
   */
  findOne(request: userId): Promise<UserEntity>;
}

export function UsersServiceMethods() {
  return function (constructor: Function) {
    for (const method of ["findOne"]) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("UsersService", method)(constructor.prototype[method], method, descriptor);
    }
    for (const method of []) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("UsersService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}
