// @generated by protoc-gen-nestjs v0.2.0 with parameter "target=ts"
// @generated from file apps/backend/auth/src/proto/auth.proto (package auth, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Payload, UserEntity } from "./auth_pb.js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";

/**
 * @generated from service auth.AuthService
 */
export interface AuthServiceController {
  /**
   * @generated from rpc auth.AuthService.me
   */
  me(request: Payload): Promise<UserEntity>;
}

export function AuthServiceMethods() {
  return function (constructor: Function) {
    for (const method of ["me"]) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
    for (const method of []) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}
