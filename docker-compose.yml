version: '3.8'
networks:
  GptHub:
    driver: bridge


services:
  #  gateway:
  #    container_name: gateway
  #    build:
  #      dockerfile: apps/Dockerfile
  #    ports:
  #      - "3000:3000"
  #    volumes:
  #      - .:/app
  #    environment:
  #      NODE_ENV: "development"
  #      PORT: 3000
  #    command:
  #      - npx
  #      - nx
  #      - run
  #      - gateway:serve:development
  #    restart: on-failure
  #  auth:
  #    container_name: auth
  #    build:
  #      dockerfile: apps/Dockerfile
  #    ports:
  #      - "3010:3010"
  #    volumes:
  #      - .:/app
  #    env_file:
  #      - .env
  #    environment:
  #      NODE_ENV: "development"
  #      PORT: 3010
  #      DATABASE_URL: ${USERS_POSTGRES_URL}
  #    command: [ "npm", "run", "prisma:migrate", "&&", "nx", "run", "auth:serve" ]
  #    networks:
  #      - GptHub
  #    restart: on-failure
  #    depends_on:
  #      - postgres
  #
  postgres:
    image: postgres:alpine
    # restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    env_file:
      - .env
    environment:
      # POSTGRES_USER: ${POSTGRES_USER}
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${USERS_POSTGRES_URL}
    # volumes:
    #   - ./postgres_data:/var/lib/postgresql/data/
    command:
      [ 'postgres', '-c', 'log_statement=all', '-c', 'log_destination=stderr' ]

  postgres-exporter:
    image: bitnami/postgres-exporter
    env_file:
      - .env
    environment:
      - DATA_SOURCE_NAME=${POSTGRES_URL}
    depends_on:
      - postgres
